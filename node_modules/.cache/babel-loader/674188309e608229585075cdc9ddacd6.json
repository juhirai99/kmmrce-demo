{"ast":null,"code":"var _jsxFileName = \"/Users/amansiddique/Documents/GitHub/kmmrce-demo/src/components/pricing-list/pricing-list.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button } from \"../button/button\";\nimport { TITLE_MOCK, LIST_MOCK } from \"../../service/price.mock\";\nimport * as Styled from \"./pricing-list.styles\";\nimport useBreakpoints from \"../../hooks/useBreakpoint\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PriceList = () => {\n  _s();\n\n  const {\n    isLaptop,\n    isMobile\n  } = useBreakpoints();\n  return /*#__PURE__*/_jsxDEV(Styled.Table, {\n    children: [/*#__PURE__*/_jsxDEV(Styled.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Styled.Head, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), TITLE_MOCK.map(({\n        icon,\n        title\n      }) => /*#__PURE__*/_jsxDEV(Styled.Head, {\n        children: [/*#__PURE__*/_jsxDEV(Styled.Icons, {\n          src: icon,\n          alt: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Styled.Title, {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), isLaptop && /*#__PURE__*/_jsxDEV(Button, {\n          type: \"buttonStyleDark\",\n          children: \"Request Demo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 26\n        }, this)]\n      }, icon, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Styled.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Styled.SubTitle, {\n        children: \"Core Features\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), LIST_MOCK.coreFeatures.map(({\n        title,\n        isStandard,\n        isProfessional,\n        isEnterprise\n      }) => /*#__PURE__*/_jsxDEV(Styled.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Styled.Col, {\n          children: title\n        }, title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Styled.WrappedDiv, {\n          children: [/*#__PURE__*/_jsxDEV(Styled.Col, {\n            children: [isMobile && /*#__PURE__*/_jsxDEV(Styled.Item, {\n              children: \"is Standard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 32\n            }, this), isStandard ? /*#__PURE__*/_jsxDEV(Styled.Icons, {\n              src: process.env.PUBLIC_URL + `/image/tick.svg`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(Styled.Icons, {\n              src: process.env.PUBLIC_URL + `/image/null.svg`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Styled.Col, {\n            children: [isMobile && /*#__PURE__*/_jsxDEV(Styled.Item, {\n              children: \"is Professional\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 32\n            }, this), isProfessional ? /*#__PURE__*/_jsxDEV(Styled.Icons, {\n              src: process.env.PUBLIC_URL + `/image/tick.svg`,\n              alt: \"is Professional\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(Styled.Icons, {\n              src: process.env.PUBLIC_URL + `/image/null.svg`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Styled.Col, {\n            children: [isMobile && /*#__PURE__*/_jsxDEV(Styled.Item, {\n              children: \"is Enterprise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 32\n            }, this), isEnterprise ? /*#__PURE__*/_jsxDEV(Styled.Icons, {\n              src: process.env.PUBLIC_URL + `/image/tick.svg`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 35\n            }, this) : /*#__PURE__*/_jsxDEV(Styled.Icons, {\n              src: process.env.PUBLIC_URL + `/image/null.svg`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this)]\n      }, title, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(Styled.SubTitle, {\n        children: \"Team Support\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), LIST_MOCK.teamSupport.map(({\n        title,\n        isStandard,\n        isProfessional,\n        isEnterprise\n      }) => /*#__PURE__*/_jsxDEV(Styled.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Styled.Col, {\n          children: title\n        }, title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Styled.WrappedDiv, {\n          children: [/*#__PURE__*/_jsxDEV(Styled.Col, {\n            children: [isMobile && /*#__PURE__*/_jsxDEV(Styled.Item, {\n              children: \"is Standard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 32\n            }, this), isStandard ? /*#__PURE__*/_jsxDEV(Styled.Icons, {\n              src: process.env.PUBLIC_URL + `/image/tick.svg`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(Styled.Icons, {\n              src: process.env.PUBLIC_URL + `/image/null.svg`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Styled.Col, {\n            children: [isMobile && /*#__PURE__*/_jsxDEV(Styled.Item, {\n              children: \"is Professional\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 32\n            }, this), isProfessional ? /*#__PURE__*/_jsxDEV(Styled.Icons, {\n              src: process.env.PUBLIC_URL + \"/image/tick.svg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Styled.Icons, {\n              src: process.env.PUBLIC_URL + \"/image/null.svg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Styled.Col, {\n            children: [isMobile && /*#__PURE__*/_jsxDEV(Styled.Item, {\n              children: \"is Enterprise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 32\n            }, this), isEnterprise ? /*#__PURE__*/_jsxDEV(Styled.Icons, {\n              src: process.env.PUBLIC_URL + \"image/tick.svg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(Styled.Icons, {\n              src: process.env.PUBLIC_URL + \"image/null.svg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)), isLaptop && /*#__PURE__*/_jsxDEV(Styled.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Styled.Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Styled.Col, {\n          children: [/*#__PURE__*/_jsxDEV(Styled.QuotedPrice, {\n            children: \"$100/month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"buttonStyleDark\",\n            children: \"Select this plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Styled.Col, {\n          children: [/*#__PURE__*/_jsxDEV(Styled.QuotedPrice, {\n            children: \"$2000/month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"buttonStyleDark\",\n            children: \"Select this plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Styled.Col, {\n          children: [/*#__PURE__*/_jsxDEV(Styled.QuotedPrice, {\n            children: \"$3,500/month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"buttonStyleDark\",\n            children: \"Select this plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PriceList, \"juMRcGUAQMIOQMYwNWv1relGWOU=\", false, function () {\n  return [useBreakpoints];\n});\n\n_c = PriceList;\nexport default PriceList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PriceList\");","map":{"version":3,"sources":["/Users/amansiddique/Documents/GitHub/kmmrce-demo/src/components/pricing-list/pricing-list.js"],"names":["React","Button","TITLE_MOCK","LIST_MOCK","Styled","useBreakpoints","PriceList","isLaptop","isMobile","map","icon","title","coreFeatures","isStandard","isProfessional","isEnterprise","process","env","PUBLIC_URL","teamSupport"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { Button } from \"../button/button\";\nimport { TITLE_MOCK ,LIST_MOCK } from \"../../service/price.mock\";\nimport * as Styled from \"./pricing-list.styles\";\nimport useBreakpoints from \"../../hooks/useBreakpoint\";\n\nconst PriceList = () => {\n  const { isLaptop, isMobile } = useBreakpoints();\n   return (\n    <Styled.Table>\n      <Styled.Row>\n        <Styled.Head></Styled.Head>\n        {TITLE_MOCK.map(({ icon, title }) => (\n          <Styled.Head key={icon}>\n            <Styled.Icons src={icon} alt={title} />\n            <Styled.Title>{title}</Styled.Title>\n            {isLaptop && <Button type=\"buttonStyleDark\">Request Demo</Button>}\n          </Styled.Head>\n        ))}\n      </Styled.Row>\n      <Styled.Body>\n        <Styled.SubTitle>Core Features</Styled.SubTitle>\n        {LIST_MOCK.coreFeatures.map(\n          ({ title, isStandard, isProfessional, isEnterprise }) => (\n            <Styled.Row key={title}>\n              <Styled.Col key={title}>{title}</Styled.Col>\n              <Styled.WrappedDiv>\n                <Styled.Col>\n                  {isMobile && <Styled.Item>is Standard</Styled.Item>}\n                  { isStandard ?\n                    <Styled.Icons\n                    src={process.env.PUBLIC_URL+`/image/tick.svg`}\n                  />\n                  :<Styled.Icons\n                  src={process.env.PUBLIC_URL+`/image/null.svg`}\n                />\n                }\n                </Styled.Col>\n\n                <Styled.Col>\n                  {isMobile && <Styled.Item>is Professional</Styled.Item>}\n                  { isProfessional ?<Styled.Icons\n                    src={process.env.PUBLIC_URL+`/image/tick.svg`}\n                    alt=\"is Professional\"\n                  />:\n                  <Styled.Icons\n                    src={process.env.PUBLIC_URL+`/image/null.svg`}\n                  />\n                  }\n                </Styled.Col>\n                <Styled.Col>\n                  {isMobile && <Styled.Item>is Enterprise</Styled.Item>}\n                  {isEnterprise ? <Styled.Icons\n                    src={process.env.PUBLIC_URL+`/image/tick.svg`}\n                  />:\n                  <Styled.Icons\n                    src={process.env.PUBLIC_URL+`/image/null.svg`}\n                  />\n                  }\n                </Styled.Col>\n              </Styled.WrappedDiv>\n            </Styled.Row>\n          )\n        )}\n\n        <Styled.SubTitle>Team Support</Styled.SubTitle>\n        {LIST_MOCK.teamSupport.map(\n          ({ title, isStandard, isProfessional, isEnterprise }) => (\n            <Styled.Row>\n              <Styled.Col key={title}>{title}</Styled.Col>\n              <Styled.WrappedDiv>\n                <Styled.Col>\n                  {isMobile && <Styled.Item>is Standard</Styled.Item>}\n                  { isStandard ?\n                    <Styled.Icons\n                    src= {process.env.PUBLIC_URL+`/image/tick.svg`}\n                    \n                  /> \n                  :\n                  <Styled.Icons\n                    src= {process.env.PUBLIC_URL+`/image/null.svg`}\n                  /> \n                }\n                </Styled.Col>\n                <Styled.Col>\n                  {isMobile && <Styled.Item>is Professional</Styled.Item>}\n                  {isProfessional? \n                  <Styled.Icons\n                  src= {process.env.PUBLIC_URL+\"/image/tick.svg\"}\n                />\n                 :\n                  <Styled.Icons\n                    src= {process.env.PUBLIC_URL+\"/image/null.svg\"}\n                  />\n                  }\n                </Styled.Col>\n                <Styled.Col>\n                  {isMobile && <Styled.Item>is Enterprise</Styled.Item>}\n                  {\n                    isEnterprise ?\n                    <Styled.Icons\n                    src={process.env.PUBLIC_URL+\"image/tick.svg\"}\n                  /> :\n                  <Styled.Icons\n                    src={process.env.PUBLIC_URL+\"image/null.svg\"}\n                  /> \n                  }\n                </Styled.Col>\n              </Styled.WrappedDiv>\n            </Styled.Row>\n          )\n        )}\n        {isLaptop && (\n          <Styled.Row>\n            <Styled.Col></Styled.Col>\n            <Styled.Col>\n              <Styled.QuotedPrice>$100/month</Styled.QuotedPrice>\n              <Button type=\"buttonStyleDark\">Select this plan</Button>\n            </Styled.Col>\n            <Styled.Col>\n              <Styled.QuotedPrice>$2000/month</Styled.QuotedPrice>\n              <Button type=\"buttonStyleDark\">Select this plan</Button>\n            </Styled.Col>\n            <Styled.Col>\n              <Styled.QuotedPrice>$3,500/month</Styled.QuotedPrice>\n              <Button type=\"buttonStyleDark\">Select this plan</Button>\n            </Styled.Col>\n          </Styled.Row>\n        )}\n      </Styled.Body>\n    </Styled.Table>\n  );\n};\n\nexport default PriceList;\n"]},"metadata":{},"sourceType":"module"}